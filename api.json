{
  "swagger": "2.0",
  "info": {
    "version": "1.0.5",
    "title": "Uturn API documentation",
    "x-logo": {
      "url": "https://portal.uturn-system.com/assets/images/logo_uturn.png",
      "backgroundColor": "#FFFFFF",
      "altText": "Uturn logo",
      "href": "https://uturn-now.com"
    },
    "termsOfService": "UTURN License",
    "description" : "<div>
        <strong class = 'uturn-strong'>Release history</strong>
        <br><br>
        <ol>
          <li><strong class = 'uturn-strong'>V1.0.0</strong> :- Initial version</li>
          <li><strong class = 'uturn-strong'>V1.0.1</strong> :- 
            <ul class = 'uturn-ul-style'>
              <li>Added support for <strong class = 'uturn-strong'><a href = '#operation/getQuotesOnShipmentUsingGET'>GET quotations</a></strong> on a shipment.</li>
              <li>Added support for <strong class = 'uturn-strong'><a href = '#operation/assignShipmentToCarrierUsingPOST'>Assign carrier</a></strong> to shipment based on quote amount.</li>
              <li>Changed the data-type of carrier rating in <strong class = 'uturn-strong'><a href = '#operation/getCarrierContractUsingGET'>GET carrier details of a shipment</a></strong> from string to number.</li>
            </ul>
          </li>
          <li><strong class = 'uturn-strong'>V1.0.2</strong> :- </li>
            <ul class = 'uturn-ul-style'>
                <li>Updated <strong class = 'uturn-strong'><a href = '#operation/updateShipmentUsingPOST'>POST update to shipment</a></strong> API call to handle update contract of carriage setup</li>
                <li>Updated field descriptions related to contract update.</li>
                <li>Fields related to contract update will now be processed only after carrier confirms the request.</li>
            </ul>
            <li><strong class = 'uturn-strong'>V1.0.3</strong> :- </li>
            <ul class = 'uturn-ul-style'>
                <li>Updated <strong class = 'uturn-strong'><a href = '#operation/createShipmentUsingPOST'>POST Create a shipment</a></strong> and <strong class = 'uturn-strong'>POST Update a shipment</strong> API calls. 
                <li><strong>productCategory</strong> field is removed and replaced by <strong>cargoDescription</strong> string field</li>
                <li><strong>requirements</strong> field is removed and replaced by <strong>requirementCodes</strong> string[] field. Multiple requirements can now be added.</li>
            </ul>
            <li><strong class = 'uturn-strong'>V1.0.4</strong> :- </li>
            <ul class = 'uturn-ul-style'>
                <li>Added support for fetching <strong class = 'uturn-strong'><a href = '#operation/fetchShipmentPODsUsingGET'>Proof of delivery (POD)</a></strong> documents uploaded by carrier via API calls.</li>                
            </ul>
            <li><strong class = 'uturn-strong'>V1.0.5</strong> :- </li>
            <ul class = 'uturn-ul-style'>
                <li>Added support for uploading <strong class = 'uturn-strong'><a href = '#operation/uploadDocumentsToShipmentUsingPOST'>documents related to shipment</a></strong> via API calls.</li>                
            </ul>
        </ol>
      </div>
      <br/>
      <h1>Notifications</h1>
      <div>Notifications (or webhooks) serve to specify a callback url that should be invoked when an event occurs. You can contact with UTURN support to enable callback notifications. The following event types are currently supported:</div>
      <ul>
      	<li>Arrived</li>
      	<li>Departed</li>
      </ul>
      <div>When an event occurs, the callback will be invoked with the following data:</div>
      <ul>
      	<li>shipmentNumber: Uturn unique identifier of the shipment</li>
      	<li>reference: Shipper reference</li>
      	<li>equipmentId: Container number of the shipment</li>
      	<li>notificationId: Event type</li>
      </ul>
      <div>Below is an example response body</div>
      <pre>{ "shipmentNumber": 70017267, "reference": "RF87654321", "equipmentId": "SEGU9534433", "notificationId": "Arrived" }</pre>
      <div>After receiving a notification, you need to GET the execution details in order to receive the latest data.
	  <div>
",
    "contact": {
      "name": "UTURN",
      "url": "https://www.uturn-now.com",
      "email": "admin@uturn-now.com"
    },
    "license": {
      "name": "UTURN License",
      "url": "/portal/license"
    }
  },
  "host": "https://api-test.uturn-system.com",
  "basePath": "/portal",
  "tags": [
    {
      "name": "Shippers",
      "description": "Shipper Endpoints"
    }
  ],
  "paths": {
    "/shippers/assignCarrier": {
      "post": {
        "tags": [
          "Shippers"
        ],
        "summary": "Assign a carrier to the shipment.",
        "description": "Allowed Roles : Admin,User",
        "operationId": "assignShipmentToCarrierUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "description": "api_key",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestedBy",
            "in": "header",
            "description": "requestedBy",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "assignCarrierRequest",
            "description": "assignCarrierRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssignCarrierRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden Request."
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/shippers/cancel/{shipmentNr}": {
      "post": {
        "tags": [
          "Shippers"
        ],
        "summary": "Cancel a shipment in Uturn platform.",
        "description": "Allowed Roles : Admin,User",
        "operationId": "cancelShipmentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "description": "api_key",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestedBy",
            "in": "header",
            "description": "requestedBy",
            "required": true,
            "type": "string"
          },
          {
            "name": "shipmentNr",
            "in": "path",
            "description": "shipmentNr",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "cancelReason",
            "description": "cancelReason",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden Request."
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/shippers/carrierContract/{shipmentNr}": {
      "get": {
        "tags": [
          "Shippers"
        ],
        "summary": "Get all carrier details for a shipment.",
        "description": "Allowed Roles : Admin,User",
        "operationId": "getCarrierContractUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "description": "api_key",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestedBy",
            "in": "header",
            "description": "requestedBy",
            "required": true,
            "type": "string"
          },
          {
            "name": "shipmentNr",
            "in": "path",
            "description": "shipmentNr",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/CarrierContract"
            }
          },
          "403": {
            "description": "Forbidden Request."
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/shippers/create": {
      "post": {
        "tags": [
          "Shippers"
        ],
        "summary": "Create a shipment.",
        "description": "Allowed Roles : Admin,User",
        "operationId": "createShipmentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "description": "api_key",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestedBy",
            "in": "header",
            "description": "requestedBy",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenericAPICreateShipment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "403": {
            "description": "Forbidden Request."
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/shippers/executionDetails/{shipmentNr}": {
      "get": {
        "tags": [
          "Shippers"
        ],
        "summary": "Get execution details of a shipment.",
        "description": "Allowed Roles : Admin,User",
        "operationId": "getExecutionDetailsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "description": "api_key",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestedBy",
            "in": "header",
            "description": "requestedBy",
            "required": true,
            "type": "string"
          },
          {
            "name": "shipmentNr",
            "in": "path",
            "description": "shipmentNr",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/TransportExecutionDetails"
            }
          },
          "403": {
            "description": "Forbidden Request."
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/shippers/invoiceLines/{shipmentNr}": {
      "get": {
        "tags": [
          "Shippers"
        ],
        "summary": "Get cost lines for a shipment.",
        "description": "Allowed Roles : Admin,User",
        "operationId": "getCostLinesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "description": "api_key",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestedBy",
            "in": "header",
            "description": "requestedBy",
            "required": true,
            "type": "string"
          },
          {
            "name": "shipmentNr",
            "in": "path",
            "description": "shipmentNr",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/CostLines"
            }
          },
          "403": {
            "description": "Forbidden Request."
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/shippers/pod/{shipmentNr}": {
      "get": {
        "tags": [
          "Shippers"
        ],
        "summary": "Get POD of a shipment (base64)",
        "description": "Allowed Roles : Admin,User",
        "operationId": "fetchShipmentPODsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "description": "api_key",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestedBy",
            "in": "header",
            "description": "requestedBy",
            "required": true,
            "type": "string"
          },
          {
            "name": "shipmentNr",
            "in": "path",
            "description": "shipmentNr",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenericDocument"
              }
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "403": {
            "description": "Forbidden Request."
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/shippers/quotes/{shipmentNr}": {
      "get": {
        "tags": [
          "Shippers"
        ],
        "summary": "Get quotes for a shipment.",
        "description": "Allowed Roles : Admin,User",
        "operationId": "getQuotesOnShipmentUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "description": "api_key",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestedBy",
            "in": "header",
            "description": "requestedBy",
            "required": true,
            "type": "string"
          },
          {
            "name": "shipmentNr",
            "in": "path",
            "description": "shipmentNr",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CarrierQuote"
              }
            }
          },
          "403": {
            "description": "Forbidden Request."
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/shippers/shipment/metaData": {
      "get": {
        "tags": [
          "Shippers"
        ],
        "summary": "Get all metadata for a shipment.",
        "description": "Allowed Roles : Admin,User",
        "operationId": "getShipmentMetaDataUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "description": "api_key",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestedBy",
            "in": "header",
            "description": "requestedBy",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/GenericAPIShipmentMetaData"
            }
          },
          "403": {
            "description": "Forbidden Request."
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/shippers/update": {
      "post": {
        "tags": [
          "Shippers"
        ],
        "summary": "Update a shipment.",
        "description": "Allowed Roles : Admin,User",
        "operationId": "updateShipmentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "description": "api_key",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestedBy",
            "in": "header",
            "description": "requestedBy",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAPIShipment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "403": {
            "description": "Forbidden Request."
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/shippers/uploadDocuments/{shipmentNr}": {
      "post": {
        "tags": [
          "Shippers"
        ],
        "summary": "Upload (base64) documents to the shipment.",
        "description": "Allowed Roles : Admin,User",
        "operationId": "uploadDocumentsToShipmentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "description": "api_key",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestedBy",
            "in": "header",
            "description": "requestedBy",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "documentUploadList",
            "description": "documentUploadList",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenericDocumentUpload"
              }
            }
          },
          {
            "name": "shipmentNr",
            "in": "path",
            "description": "shipmentNr",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Files uploaded successfully.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "403": {
            "description": "Forbidden Request."
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/shippers/withdraw/{shipmentNr}": {
      "post": {
        "tags": [
          "Shippers"
        ],
        "summary": "Withdraw a shipment from Uturn platform.Sets the status back to CONCEPT",
        "description": "Allowed Roles : Admin,User",
        "operationId": "withdrawShipmentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "description": "api_key",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestedBy",
            "in": "header",
            "description": "requestedBy",
            "required": true,
            "type": "string"
          },
          {
            "name": "shipmentNr",
            "in": "path",
            "description": "shipmentNr",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "403": {
            "description": "Forbidden Request."
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    }
  },
  "definitions": {
    "AssignCarrierRequest": {
      "type": "object",
      "properties": {
        "quoteId": {
          "type": "integer",
          "format": "int32",
          "example": 3826,
          "description": "ID of the quoted price. This ID is used to assign a carrier to a shipment."
        },
        "shipmentNr": {
          "type": "integer",
          "format": "int32",
          "example": 70015066,
          "description": "Shipment number to be assigned"
        }
      }
    },
    "CancellationTypeDTO": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CarrierContract": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "example": "Accepted",
          "description": "Whether carrier accepted the shipment or was assigned by shipper."
        },
        "agreedPrice": {
          "type": "integer",
          "format": "int32",
          "example": 256,
          "description": "Agreed price of the shipment"
        },
        "capabilities": {
          "type": "array",
          "example": "{ADR,AEO,Gen-Set}",
          "description": "List of capabilities provided by the carrier",
          "items": {
            "type": "string"
          }
        },
        "cargoCardNumber": {
          "type": "string",
          "description": "CargoCard number of the carrier."
        },
        "eanNumber": {
          "type": "string",
          "description": "EAN number of the carrier."
        },
        "email": {
          "type": "string",
          "example": "maxcar16@mailinator.com",
          "description": "Email of the carrier"
        },
        "firstName": {
          "type": "string",
          "example": "Maxime",
          "description": "First name of the carrier"
        },
        "oooPhone": {
          "type": "string",
          "example": "0666501431",
          "description": "Out of office phone of the carrier"
        },
        "organisationName": {
          "type": "string",
          "example": "UTURN CARRIER B.V.",
          "description": "Organisation name of the carrier"
        },
        "phone": {
          "type": "string",
          "example": "0666501432",
          "description": "Contact phone of the carrier"
        },
        "rating": {
          "type": "number",
          "example": 3.1,
          "description": "Carrier rating out of 5 stars."
        },
        "surName": {
          "type": "string",
          "example": "CARREY",
          "description": "Surname of the carrier"
        }
      }
    },
    "CarrierQuote": {
      "type": "object",
      "properties": {
        "capabilities": {
          "type": "array",
          "example": "{ADR,AEO,Gen-Set}",
          "description": "List of capabilities provided by the carrier",
          "items": {
            "type": "string"
          }
        },
        "organisationName": {
          "type": "string",
          "example": "UTURN CARRIER B.V.",
          "description": "Organisation name of the carrier"
        },
        "quotedId": {
          "type": "integer",
          "format": "int32",
          "example": 3826,
          "description": "ID of the quoted price. This ID is used to assign a carrier to a shipment."
        },
        "quotedPrice": {
          "type": "number",
          "example": 237,
          "description": "Price quoted by the carrier"
        },
        "rating": {
          "type": "number",
          "example": 3.1,
          "description": "Carrier rating out of 5 stars."
        }
      }
    },
    "CostLine": {
      "type": "object",
      "properties": {
        "invoiceNumber": {
          "type": "integer",
          "format": "int32",
          "example": 1234567,
          "description": "Invoice number of the related invoice (if applicable)."
        },
        "description": {
          "type": "string",
          "example": "70013199 - Transport",
          "description": "Description of the cost line. Normally the shipment ID in combination with the cost type."
        },
        "reference": {
          "type": "string",
          "example": "Some reference",
          "description": "The invoice reference of the shipment."
        },
        "lineStatus": {
          "type": "string",
          "example": "Wait for Approval",
          "description": "The status of the cost line."
        },
        "amount": {
          "type": "number",
          "example": 150,
          "description": "Amount of the cost line."
        },
        "taxCode": {
          "type": "string",
          "example": "NL0",
          "description": "The tax code of the cost line."
        },
        "vatAmount": {
          "type": "number",
          "example": 150,
          "description": "Vat amount of the cost line."
        },
        "totalAmount": {
          "type": "number",
          "example": 150,
          "description": "Total amount of the cost line. Amount plus vatAmount."
        },
        "approvedDate": {
          "type": "string",
          "format": "date",
          "example": "2020-10-16",
          "description": "Date that the cost line was approved in the platform."
        }
      }
    },
    "CostLines": {
      "type": "object",
      "properties": {
        "lines": {
          "type": "array",
          "description": "List of cost line objects.",
          "items": {
            "$ref": "#/definitions/CostLine"
          }
        },
        "totalExclusiveVAT": {
          "type": "number",
          "example": 150,
          "description": "Total amount of the cost lines of the shipment, excluding VAT."
        },
        "totalInclusiveVAT": {
          "type": "number",
          "example": 150,
          "description": "Total amount of the cost lines of the shipment, including VAT."
        },
        "totalVAT": {
          "type": "number",
          "example": 150,
          "description": "Total VAT amount of the cost lines of the shipment."
        }
      }
    },
    "CountryDTO": {
      "type": "object",
      "properties": {
        "countryCode": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "EquipmentType": {
      "type": "object",
      "required": [
        "isoCode"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "45FT Dry",
          "description": "The description of the container type"
        },
        "isoCode": {
          "type": "string",
          "example": "LEG1",
          "description": "The ISO-code of the container.When updating and status is Carrier Assigned, the carrier first needs to approve the update request."
        }
      }
    },
    "GenericAPICreateShipment": {
      "type": "object",
      "required": [
        "grossWeight",
        "shipmentUnit",
        "transportStops"
      ],
      "properties": {
        "shipmentUnit": {
          "description": "The type of equipment that needs to be transported",
          "$ref": "#/definitions/EquipmentType"
        },
        "equipmentId": {
          "type": "string",
          "example": "FOTU1234567",
          "description": "The container number of the transport order.Should be 11 characters.First 3 characters should be letters.4th character should be U, J or Z and last 7 characters should be numbers.The format is in ISO 6346."
        },
        "tareWeight": {
          "type": "integer",
          "format": "int32",
          "example": 3500,
          "description": "The weight of the container"
        },
        "generatorSet": {
          "type": "boolean",
          "example": false,
          "description": "If TRUE a generator set will be required. If not filled, by default FALSE"
        },
        "shippingLine": {
          "description": "The shipping line for this shipment used to make pre-announcements",
          "$ref": "#/definitions/ShippingLine"
        },
        "unCode": {
          "type": "string",
          "example": "1234",
          "description": "The four digit code identifying the type of hazardous goods. Required when hazardous"
        },
        "seal": {
          "type": "string",
          "example": "ABC123",
          "description": "Seal number of the equipment"
        },
        "grossWeight": {
          "type": "integer",
          "format": "int32",
          "example": 12000,
          "description": "Weight to be loaded + tare weight of container"
        },
        "cargoDescription": {
          "type": "string",
          "description": "The type of goods that are in the container"
        },
        "remarks": {
          "type": "string",
          "example": "Driver should wear white socks",
          "description": "Additional remarks for this shipment"
        },
        "requirementCodes": {
          "type": "array",
          "example": "['AC', 'OOG']",
          "description": "The specific requirements for the transport.",
          "items": {
            "type": "string"
          }
        },
        "transportStops": {
          "type": "array",
          "description": "Array of minimum 2 or more stops describing the stops required to execute the transport",
          "items": {
            "$ref": "#/definitions/TransportStop"
          }
        },
        "invoiceReference": {
          "type": "string",
          "example": "Invoice52846",
          "description": "Reference that will be used on the invoice. If not filled, by default UTURN shipment number"
        },
        "price": {
          "type": "integer",
          "format": "int32",
          "example": 450,
          "description": "Target price of the published transport, agreed price of the preferred carrier(s).Must be greater than 0."
        },
        "vat": {
          "type": "boolean",
          "example": false,
          "description": "If TRUE, normal VAT rules will apply. If FALSE, 0% VAT will apply on this shipment. By default FALSE"
        },
        "acceptancePrice": {
          "type": "boolean",
          "example": true,
          "description": "If TRUE carriers can accept the shipment for the price. If FALSE, it is bid only. If not filled, by default FALSE"
        },
        "carriers": {
          "type": "array",
          "example": "[10000872,10000873]",
          "description": "List of preferred carriers for this shipment. If empty, the shipment is published on the market.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "publishFrom": {
          "type": "string",
          "format": "date-time",
          "example": "2021-11-11T13:34:58.80+02:00",
          "description": "If not filled, by default current date time.The format is in ISO 8601"
        },
        "publishUntil": {
          "type": "string",
          "format": "date-time",
          "example": "2021-11-11T13:34:58.80+02:00",
          "description": "If not filled, by default stop1 Until Date time.The format is in ISO 8601"
        },
        "publishShipment": {
          "type": "boolean",
          "example": true,
          "description": "If present and true shipment will published after creation.If not present or false shipment will created as concept."
        }
      }
    },
    "GenericAPIShipmentMetaData": {
      "type": "object",
      "properties": {
        "shipmentUnits": {
          "type": "array",
          "description": "The type of equipment that needs to be transported.",
          "items": {
            "$ref": "#/definitions/EquipmentType"
          }
        },
        "shippingLines": {
          "type": "array",
          "description": "The shipping line for this shipment used to make pre-announcements.",
          "items": {
            "$ref": "#/definitions/ShippingLine"
          }
        },
        "requirements": {
          "type": "array",
          "description": "The general type of goods that are in the container, list can be provided.",
          "items": {
            "$ref": "#/definitions/Requirement"
          }
        },
        "countries": {
          "type": "array",
          "description": "The list of countries.",
          "items": {
            "$ref": "#/definitions/CountryDTO"
          }
        },
        "cancellationTypes": {
          "type": "array",
          "description": "The list of valid shipment cancellation reasons.",
          "items": {
            "$ref": "#/definitions/CancellationTypeDTO"
          }
        },
        "invoiceLineStatusList": {
          "type": "array",
          "description": "The list of valid invoice line statuses.",
          "items": {
            "$ref": "#/definitions/InvoiceLineStatusDTO"
          }
        },
        "tsoStatusList": {
          "type": "array",
          "description": "The list of valid TSO statuses.",
          "items": {
            "$ref": "#/definitions/TSOStatus"
          }
        },
        "documentUploadFileCategories": {
          "type": "array",
          "description": "Document types.",
          "items": {
            "$ref": "#/definitions/GenericDocumentFileType"
          }
        }
      }
    },
    "GenericDocument": {
      "type": "object",
      "properties": {
        "fullFileName": {
          "type": "string",
          "example": "70000000_POD_1.pdf",
          "description": "Full name of the document with extension."
        },
        "fileName": {
          "type": "string",
          "example": "70000000_POD_1",
          "description": "File name of the document"
        },
        "fileExtension": {
          "type": "string",
          "example": "pdf",
          "description": "File extension of the document."
        },
        "fileInBase64format": {
          "type": "string",
          "description": "File in Base64 encoded format."
        }
      }
    },
    "GenericDocumentFileType": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "BOL,SHIPMENT_GENERAL",
          "description": "Code of the file type. To be used in upload document call."
        },
        "description": {
          "type": "string",
          "example": "Bill of Lading,Other",
          "description": "Description of the file type."
        }
      }
    },
    "GenericDocumentUpload": {
      "type": "object",
      "required": [
        "fileInBase64format",
        "fileName",
        "fileType"
      ],
      "properties": {
        "fileName": {
          "type": "string",
          "example": "test_file.pdf",
          "description": "Full name of the document with extension.",
          "enum": [
            "pdf",
            "doc",
            "docx",
            "jpeg",
            "jpg",
            "png",
            "tif",
            "tiff",
            "bmp",
            "xls",
            "xlsx",
            "csv"
          ]
        },
        "fileType": {
          "type": "string",
          "description": "Code of the file type. Values can be retrieved from meta-data call."
        },
        "fileInBase64format": {
          "type": "string",
          "description": "File in Base64 encoded format. Max up-loadable size 5MB."
        },
        "fileDescription": {
          "type": "string",
          "example": "Document for clearance",
          "description": "Description of file. Max 30 characters"
        }
      }
    },
    "InvoiceLineStatusDTO": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Code of invoice line status"
        },
        "description": {
          "type": "string",
          "description": "Description of invoice line status"
        }
      }
    },
    "Requirement": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "FC",
          "description": "The code of the requirement"
        },
        "name": {
          "type": "string",
          "example": "Frozen cargo (-25/-18C)",
          "description": "The name of the requirement"
        }
      }
    },
    "ShippingLine": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "CMDU",
          "description": "The SCAC-code of the shipping line (code list can be retrieved in GetMetadata)"
        },
        "name": {
          "type": "string",
          "example": "CMA-CGM",
          "description": "The name of the shipping line"
        }
      }
    },
    "TSOStatus": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "example": "In Progress",
          "description": "Status description of the TSO."
        },
        "code": {
          "type": "string",
          "example": "IP",
          "description": "Status code of the TSO."
        }
      }
    },
    "TransportExecutionDetails": {
      "type": "object",
      "properties": {
        "equipmentId": {
          "type": "string",
          "example": "FOTU1234567",
          "description": "The container number of the transport order"
        },
        "seal": {
          "type": "string",
          "example": "ABC123",
          "description": "Seal number of the equipment"
        },
        "shipmentStatus": {
          "type": "string",
          "example": "Carrier Assigned, Completed, Executed, Cancelled",
          "description": "Current status of the shipment."
        },
        "tareWeight": {
          "type": "integer",
          "format": "int32",
          "example": 3500,
          "description": "The weight of the container"
        },
        "transportStops": {
          "type": "array",
          "description": "Array of minimum 2 or more stops describing the stops required to execute the transport",
          "items": {
            "$ref": "#/definitions/TransportStop"
          }
        },
        "tsoStatus": {
          "type": "string",
          "example": "In Progress, Executed, Invoiced, Cancelled, Cost Declared",
          "description": "Current status of Transport Order."
        }
      }
    },
    "TransportLocation": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "Terminal Barendrecht",
          "description": "Name of the location, which will be used to map the location in UTURN"
        },
        "street": {
          "type": "string",
          "example": "Bazenstraat",
          "description": "Name of the street. Required if creating new address in portal."
        },
        "houseNumber": {
          "type": "string",
          "example": "15",
          "description": "Address number. Required if creating new address in portal."
        },
        "postalCode": {
          "type": "string",
          "example": "4444AB",
          "description": "Postal code. Required if creating new address in portal."
        },
        "city": {
          "type": "string",
          "example": "Rotterdam",
          "description": "City. Required if creating new address in portal."
        },
        "countryCode": {
          "type": "string",
          "example": "NLD",
          "description": "Country code based on ISO 3 letter code. Required if creating new address in portal."
        },
        "lat": {
          "type": "string",
          "example": "50.0821",
          "description": "Latitude of the location. Required if creating new address in portal."
        },
        "lon": {
          "type": "string",
          "example": "4.4243",
          "description": "Longitude of the location. Required if creating new address in portal."
        },
        "uniqueLocationId": {
          "type": "string",
          "example": "My Unique identifier",
          "description": "Unique location identifier from the shipper."
        }
      }
    },
    "TransportStop": {
      "type": "object",
      "required": [
        "location",
        "sequenceNumber",
        "stopType"
      ],
      "properties": {
        "sequenceNumber": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "The execution order of this stop in the transport"
        },
        "location": {
          "description": "The location of the stop.Address details (street, houseNumber, city etc.) are only needed when the location is unknown, Google Maps API will be used to determine the exact location.When updating and status is Carrier Assigned, the carrier first needs to approve the update request.",
          "$ref": "#/definitions/TransportLocation"
        },
        "stopType": {
          "type": "string",
          "example": "Pick-up",
          "description": "Stop type",
          "enum": [
            "Pick-up",
            "Load",
            "Deliver",
            "Drop",
            "Stop"
          ]
        },
        "from": {
          "type": "string",
          "format": "date-time",
          "example": "2021-11-11T13:34",
          "description": "Start of window for this location.When updating and status is Carrier Assigned, the carrier first needs to approve the update request."
        },
        "until": {
          "type": "string",
          "format": "date-time",
          "example": "2021-11-12T13:34",
          "description": "End of window for this location.When updating and status is Carrier Assigned, the carrier first needs to approve the update request."
        },
        "reference": {
          "type": "string",
          "example": "ABC12584",
          "description": "Reference needed to interact with the location"
        },
        "remarks": {
          "type": "string",
          "example": "Report at the blue gate",
          "description": "Additional instructions for the carrier for this location"
        },
        "shippingLine": {
          "description": "The shipping line for this stop to make pre-announcements, if it's different than the one specified in shipment",
          "$ref": "#/definitions/ShippingLine"
        },
        "vesselName": {
          "type": "string",
          "example": "QUEEN ELIZABETH",
          "description": "Vessel name"
        },
        "port": {
          "type": "string",
          "example": "HOBART",
          "description": "Port name"
        },
        "actualArrival": {
          "type": "string",
          "format": "date-time",
          "example": "2021-11-11T13:34",
          "description": "Actual arrival of carrier for this location.The format is ISO-8601 local date"
        },
        "actualDeparture": {
          "type": "string",
          "format": "date-time",
          "example": "2021-11-12T13:34",
          "description": "Actual departure of carrier for this location.The format is ISO-8601 local date"
        },
        "eta": {
          "type": "string",
          "format": "date-time",
          "example": "2021-11-12T13:34",
          "description": "ETA for this location.The format is ISO-8601 local date"
        }
      }
    },
    "UpdateAPIShipment": {
      "type": "object",
      "required": [
        "shipmentNumber",
        "transportStops"
      ],
      "properties": {
        "shipmentNumber": {
          "type": "integer",
          "format": "int32",
          "example": 70014195,
          "description": "Shipment number. Not required during creation of shipment."
        },
        "shipmentUnit": {
          "description": "The type of equipment that needs to be transported",
          "$ref": "#/definitions/EquipmentType"
        },
        "equipmentId": {
          "type": "string",
          "example": "FOTU1234567",
          "description": "The container number of the transport order.Should be 11 characters.First 3 characters should be letters.4th character should be U, J or Z and last 7 characters should be numbers."
        },
        "tareWeight": {
          "type": "integer",
          "format": "int32",
          "example": 3500,
          "description": "The weight of the container"
        },
        "generatorSet": {
          "type": "boolean",
          "example": false,
          "description": "If TRUE a generator set will be required. If not filled, by default FALSE.When updating and status is Carrier Assigned, the carrier first needs to approve the update request."
        },
        "shippingLine": {
          "description": "The shipping line for this shipment used to make pre-announcements",
          "$ref": "#/definitions/ShippingLine"
        },
        "unCode": {
          "type": "string",
          "example": "1234",
          "description": "The four digit code identifying the type of hazardous goods. Required when hazardous.When updating and status is Carrier Assigned, the carrier first needs to approve the update request."
        },
        "seal": {
          "type": "string",
          "example": "ABC123",
          "description": "Seal number of the equipment"
        },
        "grossWeight": {
          "type": "integer",
          "format": "int32",
          "example": 12000,
          "description": "Weight to be loaded + tare weight of container.When updating and status is Carrier Assigned, the carrier first needs to approve the update request."
        },
        "cargoDescription": {
          "type": "string",
          "description": "The general description of goods that are in the container."
        },
        "requirementCodes": {
          "type": "array",
          "example": "['AC', 'OOG']",
          "description": "The specific requirements for the transport. When updating and status is Carrier Assigned, the carrier first needs to approve the update request.",
          "items": {
            "type": "string"
          }
        },
        "remarks": {
          "type": "string",
          "example": "Driver should wear white socks",
          "description": "Additional remarks for this shipment"
        },
        "transportStops": {
          "type": "array",
          "description": "Array of minimum 2 or more stops describing the stops required to execute the transport",
          "items": {
            "$ref": "#/definitions/TransportStop"
          }
        },
        "invoiceReference": {
          "type": "string",
          "example": "Invoice52846",
          "description": "Reference that will be used on the invoice."
        },
        "price": {
          "type": "integer",
          "format": "int32",
          "example": 450,
          "description": "Target price of the published transport, agreed price of the preferred carrier(s).Must be greater than 0."
        },
        "vat": {
          "type": "boolean",
          "example": false,
          "description": "If TRUE, normal VAT rules will apply. If FALSE, 0% VAT will apply on this shipment.By default FALSE."
        },
        "acceptancePrice": {
          "type": "boolean",
          "example": false,
          "description": "If TRUE carriers can accept the shipment for the price. If FALSE, it is bid only.By default FALSE."
        },
        "carriers": {
          "type": "array",
          "example": "[10000872,10000873]",
          "description": "List of preferred carriers for this shipment. If empty, the shipment is published on the market.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "publishFrom": {
          "type": "string",
          "format": "date-time",
          "example": "2021-11-11T13:34:58.80+02:00",
          "description": "Date time to publish shipment from.The format is in ISO 8601"
        },
        "publishUntil": {
          "type": "string",
          "format": "date-time",
          "example": "2021-11-11T13:34:58.80+02:00",
          "description": "Date time to publish shipment until.The format is in ISO 8601"
        }
      }
    }
  }
}
